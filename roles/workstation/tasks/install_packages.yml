---
# Generic package installation tasks
# Accepts variables: packages (list), package_type (string for task naming)

- name: "Install {{ package_type }} via Homebrew (macOS)"
  community.general.homebrew:
    name: "{{ item[current_os].package }}"
    state: latest
  loop: "{{ packages }}"
  when: 
    - current_os == 'macos'
    - item[current_os].type == 'homebrew'
  loop_control:
    label: "{{ item.name }}"

- name: "Install {{ package_type }} via Homebrew Cask (macOS)"
  community.general.homebrew_cask:
    name: "{{ item[current_os].package }}"
    state: latest
    greedy: yes
  loop: "{{ packages }}"
  when: 
    - current_os == 'macos'
    - item[current_os].type == 'homebrew_cask'
  loop_control:
    label: "{{ item.name }}"

- name: "Install {{ package_type }} via DNF (Fedora)"
  ansible.builtin.dnf:
    name: "{{ item[current_os].package }}"
    state: latest
  become: yes
  loop: "{{ packages }}"
  when: 
    - current_os == 'fedora'
    - item[current_os].type == 'dnf'
    - item[current_os].repo_setup is not defined
    - item[current_os].copr is not defined
  loop_control:
    label: "{{ item.name }}"

- name: "Install {{ package_type }} from COPR (Fedora)"
  ansible.builtin.dnf:
    name: "{{ item[current_os].package }}"
    enablerepo: "{{ item[current_os].copr }}"
    state: latest
  become: yes
  loop: "{{ packages }}"
  when: 
    - current_os == 'fedora'
    - item[current_os].type == 'dnf'
    - item[current_os].copr is defined
  loop_control:
    label: "{{ item.name }}"

- name: "Install {{ package_type }} with repository setup (Fedora)"
  ansible.builtin.dnf:
    name: "{{ item[current_os].package }}"
    state: latest
  become: yes
  loop: "{{ packages }}"
  when: 
    - current_os == 'fedora'
    - item[current_os].type == 'dnf'
    - item[current_os].repo_setup is defined
  loop_control:
    label: "{{ item.name }}"

- name: "Install {{ package_type }} via Flatpak (Fedora)"
  community.general.flatpak:
    name: "{{ item[current_os].package }}"
    state: latest
  become: yes
  loop: "{{ packages }}"
  when: 
    - current_os == 'fedora'
    - item[current_os].type == 'flatpak'
  loop_control:
    label: "{{ item.name }}"

- name: "Install {{ package_type }} via Pacman (Arch Linux)"
  community.general.pacman:
    name: "{{ item[current_os].package }}"
    state: latest
  become: yes
  loop: "{{ packages }}"
  when: 
    - current_os == 'arch'
    - item[current_os].type == 'pacman'
  loop_control:
    label: "{{ item.name }}"

- name: "Install {{ package_type }} via AUR (Arch Linux)"
  kewlfft.aur.aur:
    name: "{{ item[current_os].package }}"
    state: latest
  become: no
  loop: "{{ packages }}"
  when: 
    - current_os == 'arch'
    - item[current_os].type == 'aur'
  loop_control:
    label: "{{ item.name }}"

- name: "Install {{ package_type }} via Flatpak (Arch Linux)"
  community.general.flatpak:
    name: "{{ item[current_os].package }}"
    state: latest
  become: yes
  loop: "{{ packages }}"
  when: 
    - current_os == 'arch'
    - item[current_os].type == 'flatpak'
  loop_control:
    label: "{{ item.name }}"